     <div id="main" class="container">
     	  <div class="row">
            <div class="col s12">
     	  	   <h4>Package download statistics</h4>
            </div>
          </div>
          <div class="row valign-wrapper">            
            <!-- Dropdown Trigger -->
            <div class="col s2 valign">
              <a class='dropdown-button btn small' data-activates='dropdown1' data-constrainwidth='false'>Sort by</a>
              <!-- Dropdown Structure -->
              <ul id='dropdown1' class='dropdown-content'>
                <li><a href="javascript: displayPackageList('orderByName');">package name</a></li>
                <li><a href="javascript: displayPackageList('orderByDownloadCount');">download count</a></li>
              </ul>
            </div>
            <div class="col s7">
            </div>
            <div class="col s3">
                <div class="input-field">
                    <input id="filter" type="search">
                    <label for="filter"><i class="material-icons">search</i></label>
                    <i class="material-icons">close</i>
                </div>              
            </div>  
          </div>  

	      <div class="row" id="packages">	      
	      	<!--- dynamically generated content -->  
	      </div> 
      </div>      
    </div>	

	 <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
     <script type="text/javascript" src="/js/materialize/0.97.8/js/materialize.min.js"></script>

     <script>

        // display package grid
        function displayPackageList(orderBySelection) {
            // display a card for each tracked package
            var packagelist = JSON.parse({{{json packages}}});         
            var html = '';
            if(packagelist.length > 0) {

                // helper: sort package list by name in ascending order
                const sortByNameFunction = function(a,b) {
                    return a.packagename.localeCompare(b.packagename);
                };

                // helper: sort package list by average download count in descending order
                const sortByDownloadCountFunction = function(a,b) {
                    return -((Math.floor(a.total/a.month_count)) - (Math.floor(b.total/b.month_count)));
                };

                var packages = ($.isArray(packagelist)) ? packagelist : packagelist.split(',');
                var displayname = null;
                var numberformat = new Intl.NumberFormat();
                var sortByFunction = sortByNameFunction;
                if(orderBySelection === 'orderByDownloadCount') {
                    sortByFunction = sortByDownloadCountFunction;
                }
                $.each(packages.sort(sortByFunction), function(index, value) {
                 // console.log(JSON.stringify(value));                
                 displayname = value.packagename;
                 html+='<div class="package-entry col s12 m3"><div class="card teal darken-1"><div class="card-content white-text truncate tooltipped" data-tooltip="' + displayname + '" data-delay="50">' + displayname + '<p><ul><li><i class="tiny material-icons">schedule</i> ' + value.month_count + ' months </li><li><i class="tiny material-icons">get_app</i> ' + numberformat.format(Math.floor(value.total/value.month_count)) + ' avg/month </li></ul></p></div><div class="card-action"><a href="https://www.npmjs.com/package/'+value.packagename+'"><i class="small material-icons tooltipped" data-tooltip="View package on npmjs.com" data-delay="50">info_outline</i></a><a href="/stats/' + value.packagename +'"><i class="small material-icons tooltipped" data-tooltip="View download statistics" data-delay="50">assessment</i></a><a href="/data/byMonth/'+ value.packagename +'"><i class="small material-icons tooltipped" data-tooltip="Download monthly statistics" data-delay="50">get_app</i></a><a href="/charts/byMonth/'+ value.packagename +'"><i class="small material-icons tooltipped" data-tooltip="Download chart link" data-delay="50">visibility</i></a></div></div></div>';
                });
            }
            else {
                html= 'Package download information is currently not available.'
            }
            $('#packages').html(html);
            $('.tooltipped').tooltip({delay: 50});
        }

        $('#filter').keyup(function () {
            var valThis = this.value.toLowerCase();

            $('.package-entry').each(function () {
                var text  = $(this).text(),
                    textL = text.toLowerCase();
                (textL.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
            });

         $(document).ready(function(){
            // display package list ordered by name  			
  			displayPackageList('orderByName');
    	 });
     </script>